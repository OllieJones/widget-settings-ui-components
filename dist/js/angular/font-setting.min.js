!function(){"use strict";angular.module("risevision.widget.common.font-setting",["risevision.widget.common.translate","risevision.widget.common.font-style","risevision.widget.common.alignment","risevision.widget.common.color-picker","risevision.widget.common.fontsizepicker","risevision.widget.common.fontpicker"]).directive("fontSetting",["$templateCache",function(t){return{restrict:"AE",scope:{fontData:"=",previewText:"@",hideAlignment:"@"},template:t.get("_angular/font-setting/font-setting.html"),transclude:!1,link:function(t,n,i){function e(n){if(t.previewText&&n){var i=o.find(".font-picker-text"),e=o.find(".font-picker-text span");e.css("font-family",n.font.family),e.css("font-size",n.size+"pt"),e.css("font-weight",n.bold?"bold":"normal"),e.css("font-style",n.italic?"italic":"normal"),e.css("text-decoration",n.underline?"underline":"none"),e.css("color",n.color),e.css("background-color",n.highlightColor),i.css("text-align",n.align)}}var o=$(n);t.defaultFont={font:{type:"standard",name:"Verdana",family:"Verdana"},size:"20",bold:!1,italic:!1,underline:!1,color:"black",highlightColor:"transparent"},("undefined"==typeof i.hideAlignment||"true"!==i.hideAlignment)&&(t.defaultFont.align="left"),t.defaults=function(t){if(t)for(var n=1,i=arguments.length;i>n;n++){var e=arguments[n];for(var o in e)void 0===t[o]&&(t[o]=e[o])}return t};var l=t.$watch("fontData",function(n){n&&(t.defaults(n,t.defaultFont),e(n),l(),t.previewText&&t.$watch("fontData",e,!0))})}}}])}(),function(){try{app=angular.module("risevision.widget.common.font-setting")}catch(t){app=angular.module("risevision.widget.common.font-setting",[])}app.run(["$templateCache",function(t){"use strict";t.put("_angular/font-setting/font-setting.html",'<div class="row" class="font-settings">\n  <div class="col-md-12">\n    <ul class="list-inline">\n      <li class="pull-left">\n        <font-picker font="fontData.font"></font-picker>\n      </li>\n      <li class="pull-left">\n        <font-size-picker ng-model="fontData.size"></font-size-picker>\n      </li>\n      <li class="pull-left font-setting-button">\n        <font-style bold="fontData.bold" italic="fontData.italic" underline="fontData.underline"></font-style>\n      </li>\n      <li class="pull-left font-setting-button">\n        <input color-picker type="text" color="fontData.color" />\n      </li>\n      <li class="pull-left font-setting-button">\n        <input color-picker type="highlight" color="fontData.highlightColor" />\n      </li>\n      <li class="pull-left" ng-if="!hideAlignment">\n        <alignment align="fontData.align" class="font-setting-button"></alignment>\n      </li>\n    </ul>\n  </div>\n</div>\n<div class="row" ng-if="previewText">\n  <div class="col-md-12">\n    <div class="font-picker-text form-group">\n      <span>{{previewText}}</span>\n    </div>\n  </div>\n</div>\n')}])}();